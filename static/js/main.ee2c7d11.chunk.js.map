{"version":3,"sources":["Redux/contactActions.js","Components/Theme/index.js","Components/Contact/index.js","Redux/filterActions.js","Components/Filter/index.js","Components/InputForm/index.js","Components/Wrapper/index.js","Redux/themeActions.js","Components/ThemeButton/index.js","app.js","Redux/contactReducer.js","Redux/filterReducer.js","Redux/themeReducer.js","Redux/store.js","index.js"],"names":["contactDelete","createAction","contactAdd","name","number","payload","contact","id","uuidv4","lightTheme","fontColor","bodybg","darkTheme","mapDispatchToProps","onDelete","contactActions","connect","state","contacts","filter","theme","filterForm","el","key","className","value","onClick","e","target","style","color","Theme","background","length","map","toLowerCase","includes","filterContact","filterAdd","filterActions","type","onChange","InputForm","addContact","preventDefault","props","onAdd","setState","handleName","handleNumber","this","onSubmit","Component","Wrapper","children","themeChange","changeTheme","themeActions","App","contactReducer","createReducer","action","check","forEach","alert","checkContact","filterReducer","themeReducer","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee2c7d11.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst contactDelete = createAction('contact/delete');\r\n\r\nconst contactAdd = createAction('contact/add', (name, number) => ({\r\n  payload: {\r\n    contact: { name, number, id: uuidv4() },\r\n  },\r\n}));\r\n\r\nexport default { contactAdd, contactDelete };\r\n","const lightTheme = {\r\n  fontColor: 'black',\r\n  bodybg: 'white',\r\n};\r\nconst darkTheme = {\r\n  fontColor: 'white',\r\n  bodybg: 'black',\r\n};\r\n\r\nexport default { lightTheme, darkTheme };\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactActions from '../../Redux/contactActions';\r\nimport Theme from '../Theme';\r\nimport './style.scss';\r\n\r\nconst Contact = ({ onDelete, contacts, filter, theme }) => {\r\n  const filterForm = el => {\r\n    return (\r\n      <li key={el.id} className=\"contactCard\">\r\n        <p>{el.name}: </p>\r\n        <p>{el.number}</p>\r\n        <button\r\n          className=\"contactCard__btn\"\r\n          value={el.id}\r\n          onClick={e => onDelete(e.target.value)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  const filterContact = (filter, el) => {\r\n    if (filter !== '') {\r\n      if (el.name.toLowerCase().includes(filter.toLowerCase())) {\r\n        return filterForm(el);\r\n      } else {\r\n        return null;\r\n      }\r\n    } else {\r\n      return filterForm(el);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ul\r\n      className=\"contactList\"\r\n      style={{ color: Theme[theme].fontColor, background: Theme[theme].bodybg }}\r\n    >\r\n      {contacts.length > 0 &&\r\n        contacts.map(el => {\r\n          return filterContact(filter, el);\r\n        })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts,\r\n    filter: state.filter,\r\n    theme: state.theme,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onDelete: contactActions.contactDelete,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst filterAdd = createAction('filter/add');\r\n\r\nexport default { filterAdd };\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport filterActions from '../../Redux/filterActions';\r\nimport Theme from '../Theme';\r\nimport './styles.scss';\r\n\r\nconst Filter = ({ filter, filterAdd, theme }) => {\r\n  return (\r\n    <div\r\n      className=\"contactFormSearch\"\r\n      style={{ color: Theme[theme].fontColor, background: Theme[theme].bodybg }}\r\n    >\r\n      <h2>Contacts</h2>\r\n      <form>\r\n        <label>Find a contact: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={e => filterAdd(e.target.value)}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: state.filter,\r\n    theme: state.theme,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  filterAdd: filterActions.filterAdd,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactActions from '../../Redux/contactActions';\r\nimport Theme from '../Theme';\r\nimport './style.scss';\r\n\r\nclass InputForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  addContact = e => {\r\n    e.preventDefault();\r\n    this.props.onAdd(this.state.name, this.state.number);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  handleName = e => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n\r\n  handleNumber = e => {\r\n    this.setState({ number: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          color: Theme[this.props.theme].fontColor,\r\n          background: Theme[this.props.theme].bodybg,\r\n        }}\r\n      >\r\n        <h1>Phonebook</h1>\r\n        <form onSubmit={this.addContact} className=\"contactFormEl\">\r\n          <label>Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={this.handleName}\r\n          />\r\n          <label>Number:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.number}\r\n            onChange={this.handleNumber}\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Add contact\"\r\n            className=\"contactFormEl__button\"\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    theme: state.theme,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  onAdd: contactActions.contactAdd,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputForm);\r\n","import React, { Component } from 'react';\r\nimport Theme from '../Theme';\r\nimport { connect } from 'react-redux';\r\nimport './styles.scss';\r\n\r\nclass Wrapper extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: Theme[this.props.theme].fontColor,\r\n          background: Theme[this.props.theme].bodybg,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    theme: state.theme,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Wrapper);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst themeChange = createAction('theme/change');\r\n\r\nexport default { themeChange };\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport themeActions from '../../Redux/themeActions';\r\n\r\nconst ThemeButton = ({ changeTheme, theme }) => {\r\n  const change = () => {\r\n    if (theme === 'lightTheme') {\r\n      changeTheme('darkTheme');\r\n    } else {\r\n      changeTheme('lightTheme');\r\n    }\r\n  };\r\n  return (\r\n    <button\r\n      style={{ color: theme.fontColor, background: theme.bodybg }}\r\n      onClick={change}\r\n    >\r\n      Change theme!\r\n    </button>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    theme: state.theme,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  changeTheme: themeActions.themeChange,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeButton);\r\n","import React from 'react';\r\nimport Contact from './Components/Contact';\r\nimport Filter from './Components/Filter';\r\nimport InputForm from './Components/InputForm';\r\nimport Wrapper from './Components/Wrapper';\r\nimport ThemeButton from './Components/ThemeButton';\r\nimport './sass/main.scss';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Wrapper>\r\n      <ThemeButton />\r\n      <InputForm />\r\n      <Filter />\r\n      <Contact />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport contactActions from './contactActions';\r\n\r\nconst checkContact = (contacts, name) => {\r\n  let check = true;\r\n  if (contacts.length > 0) {\r\n    contacts.forEach(el => {\r\n      if (el.name === name) {\r\n        alert('You already have this contact');\r\n        check = false;\r\n      } else check = true;\r\n    });\r\n  }\r\n  return check;\r\n};\r\n\r\nconst contactReducer = createReducer([], {\r\n  [contactActions.contactAdd.type]: (state, action) => {\r\n    if (\r\n      action.payload.contact.name !== '' &&\r\n      checkContact(state, action.payload.contact.name)\r\n    )\r\n      return [...state, action.payload.contact];\r\n  },\r\n  [contactActions.contactDelete.type]: (state, action) =>\r\n    state.filter(el => el.id !== action.payload),\r\n});\r\n\r\nexport default contactReducer;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport filterActions from './filterActions';\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterActions.filterAdd.type]: (state, action) => action.payload,\r\n});\r\n\r\nexport default filterReducer;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport themeActions from './themeActions';\r\n\r\nconst themeReducer = createReducer('lightTheme', {\r\n  [themeActions.themeChange.type]: (state, action) => action.payload,\r\n});\r\n\r\nexport default themeReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactReducer from './contactReducer';\r\nimport filterReducer from './filterReducer';\r\nimport themeReducer from './themeReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n    filter: filterReducer,\r\n    theme: themeReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './app';\nimport store from './Redux/store.js';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}